[{"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/index.js":"1","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/App.js":"2","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/Home.js":"3","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/utils/GlobalState.js":"4","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/DeclarationForm/index.js":"5","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/LoginForm/index.js":"6","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/User.js":"7","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/SignupForm/index.js":"8","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/UpdateDetailsForm/index.js":"9","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/RequestForm/index.js":"10","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/Document/index.js":"11","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/index.js":"12","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/App.js":"13","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Home.js":"14","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Login/index.js":"15","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Request/index.js":"16","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Signup/index.js":"17","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/UpdateDetails/index.js":"18","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/CreateDeclaration/index.js":"19","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/setAuthToken.js":"20","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/userFunctions.js":"21","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/index.js":"22","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/GlobalState.js":"23","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/blockchainAPI.js":"24","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/generateMarkdown.js":"25","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/types.js":"26","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Navbar/index.js":"27","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Dashboard.js":"28","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/documentFunctions.js":"29","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/DisplayDeclaration/index.js":"30","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/geocodingAPI.js":"31"},{"size":147,"mtime":1611550827226,"results":"32","hashOfConfig":"33"},{"size":2100,"mtime":1611699643181,"results":"34","hashOfConfig":"33"},{"size":204,"mtime":1611546012039,"results":"35","hashOfConfig":"33"},{"size":1489,"mtime":1611697795652,"results":"36","hashOfConfig":"33"},{"size":1982,"mtime":1611703931568,"results":"37","hashOfConfig":"33"},{"size":1777,"mtime":1611699837092,"results":"38","hashOfConfig":"33"},{"size":3445,"mtime":1611700193804,"results":"39","hashOfConfig":"33"},{"size":126,"mtime":1611699608344,"results":"40","hashOfConfig":"33"},{"size":4243,"mtime":1611706421083,"results":"41","hashOfConfig":"33"},{"size":129,"mtime":1611699602201,"results":"42","hashOfConfig":"33"},{"size":124,"mtime":1611699594897,"results":"43","hashOfConfig":"33"},{"size":147,"mtime":1612150280458,"results":"44","hashOfConfig":"45"},{"size":1179,"mtime":1612849777185,"results":"46","hashOfConfig":"45"},{"size":1087,"mtime":1612824889936,"results":"47","hashOfConfig":"45"},{"size":4834,"mtime":1612826366385,"results":"48","hashOfConfig":"45"},{"size":2879,"mtime":1612326767708,"results":"49","hashOfConfig":"45"},{"size":15035,"mtime":1612829204661,"results":"50","hashOfConfig":"45"},{"size":6284,"mtime":1612842412602,"results":"51","hashOfConfig":"45"},{"size":7085,"mtime":1612832870203,"results":"52","hashOfConfig":"45"},{"size":992,"mtime":1612398542983,"results":"53","hashOfConfig":"45"},{"size":1021,"mtime":1612838272552,"results":"54","hashOfConfig":"45"},{"size":616,"mtime":1612218344730,"results":"55","hashOfConfig":"45"},{"size":1122,"mtime":1612839421357,"results":"56","hashOfConfig":"45"},{"size":1976,"mtime":1612754388136,"results":"57","hashOfConfig":"45"},{"size":687,"mtime":1612331997040,"results":"58","hashOfConfig":"45"},{"size":187,"mtime":1612837690290,"results":"59","hashOfConfig":"45"},{"size":2199,"mtime":1612849938659,"results":"60","hashOfConfig":"45"},{"size":4465,"mtime":1612828934252,"results":"61","hashOfConfig":"45"},{"size":211,"mtime":1612749346915,"results":"62","hashOfConfig":"45"},{"size":361,"mtime":1612754500559,"results":"63","hashOfConfig":"45"},{"size":805,"mtime":1612759942374,"results":"64","hashOfConfig":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zabqj2",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"pkgoqq",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"89"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"89"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"89"},"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/App.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/Home.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/utils/GlobalState.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/DeclarationForm/index.js",["133"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/LoginForm/index.js",["134","135"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/User.js",["136"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/SignupForm/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/UpdateDetailsForm/index.js",["137"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/RequestForm/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/Document/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/index.js",[],["138","139"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/App.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Home.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Login/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Request/index.js",["140","141"],"import { Form, Space, Input, Button, Select, Typography } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport TextArea from 'antd/lib/input/TextArea';\nimport { useAppContext } from '../../store';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\n\nfunction Request() {\n    const [state, appDispatch] = useAppContext();\n\n    return (\n        <Form\n            layout=\"horizontal\"\n        >\n            <Space direction=\"vertical\">\n                <Title level={2} style={{ paddingBottom: '25px' }}>Request a Statutory Declaration</Title>\n                <Text>Fill in the details below and an email with a link will be sent to the intended receipient.</Text>\n                <br></br>\n                <Input.Group compact>\n                    <Form.Item label=\"To:\" name=\"receipent_name\">\n                        <Input style={{ width: 250 }} placeholder=\"First Name\" />\n                        <Input style={{ width: 250 }} placeholder=\"Last Name\" />\n                    </Form.Item>\n                    <Form.Item label=\"Email:\" name=\"receipent_email\">\n                        <Input style={{ width: 500 }} placeholder=\"address@email.com.au\" />\n                    </Form.Item>\n                    <Form.Item label=\"Type:\" name=\"category\">\n                        <Select style={{ width: 500 }} defaultValue=\"Certification of Injury or Illness\">\n                            <Option value=\"Certification of Injury or Illness\">Certification of Injury or Illness</Option>\n                            <Option value=\"Certification of Injury/Illness/Death of Family Member\">Certification of Injury/Illness/Death of Family Member</Option>\n                            <Option value=\"Confirmation of Personal Details\">Confirmation of Personal Details</Option>\n                            <Option value=\"Confirmation of Financial Expenditure\">Confirmation of Financial Expenditure</Option>\n                            <Option value=\"Statement as Witness to Event\">Statement as Witness to Event</Option>\n                            <Option value=\"Statement as to Involvement in an Event\">Statement as to Involvement in an Event</Option>\n                            <Option value=\"Contractual Agreement\">Contractual Agreement</Option>\n                            <Option value=\"Other\">Other</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item label=\"Additional Information/ Requirements:\" name=\"details\">\n                        <TextArea style={{ width: 500 }} row={5} />\n                    </Form.Item>\n                </Input.Group>\n                <Form.Item name=\"Submit\">\n                    <Button type=\"primary\" shape=\"round\" icon={<SendOutlined />}>Submit</Button>\n                </Form.Item>\n            </Space>\n        </Form>\n    )\n}\n\nexport default Request;","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Signup/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/UpdateDetails/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/CreateDeclaration/index.js",["142"],"import DayJS from 'react-dayjs';\nimport { Form, Input, Button, Typography, Space, Alert } from 'antd';\nimport { PlusOutlined, SendOutlined } from '@ant-design/icons';\nimport { useState, useEffect } from 'react';\nimport { useAppContext } from '../../store';\nimport { saveDocument } from '../../utils/documentFunctions';\nimport generateMarkdown from '../../utils/generateMarkdown';\nimport API from '../../utils/blockchainAPI';\nimport { getLocation } from '../../utils/geocodingAPI';\nimport { REFRESH_DETAILS } from '../../utils/types';\n\nconst { ErrorBoundary } = Alert;\nconst { TextArea } = Input;\nconst { Title, Text, Paragraph } = Typography;\n\n\nfunction CreateDeclaration() {\n    const [state, appDispatch] = useAppContext();\n\n    const [documentState, setDocumentState] = useState({\n        content: '',\n        signature: '',\n        date: Date.now(),\n        location: '',\n        alerts: ''\n    });\n\n    useEffect(() => {\n        getCurrentLocation()\n    }, []);\n\n    const getCurrentLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(showPosition);\n        } else {\n            let location = state.user.suburb;\n            setDocumentState({ ...documentState, location });\n        }\n    }\n\n    const showPosition = (position) => {\n        getLocation(position.coords.latitude, position.coords.longitude).then((location) => {\n            setDocumentState({ ...documentState, location });\n        })\n    }\n\n    const onChange = (event) => {\n        setDocumentState({ ...documentState, [event.target.name]: event.target.value });\n    };\n\n    const changeLocation = (value) => {\n        setDocumentState({ ...documentState, location: value });\n    };\n\n    const onSubmit = () => {\n        const details = {\n            first_name: state.user.first_name,\n            last_name: state.user.last_name,\n            IOTA_address: state.user.IOTA_address[0],\n            IOTA_seed: state.user.IOTA_seed,\n            street_no: state.user.street_no,\n            street: state.user.street,\n            suburb: state.user.suburb,\n            state: state.user.state,\n            postcode: state.user.postcode,\n            occupation: state.user.occupation,\n            content: documentState.content,\n            signature: documentState.signature,\n            date: documentState.date,\n            location: documentState.location\n        }\n        const declaration = generateMarkdown(details);\n        let content = '';\n        let signature = '';\n        API.sendToBlockchain(details.IOTA_address, details.IOTA_seed, declaration)\n            .then((hash) => {\n                details.hash = hash;\n                // send returned hash to database\n                saveDocument(details)\n                    .then((res) => {\n                        let alerts = { type: res.data.type, message: res.data.message };\n                        appDispatch({ type: REFRESH_DETAILS, payload: res.data.details });\n                        setDocumentState({ ...documentState, alerts, content, signature });\n                        console.log('Stat dec submitted' + res);\n                    })\n                    .catch((error) => {\n                        let alerts = { type: error.response.data.type, message: error.response.data.message };\n                        setDocumentState({ ...documentState, alerts });\n                    })\n            })\n    }\n\n    return (\n        <Form\n            layout=\"horizontal\"\n            onFinish={onSubmit}\n        >\n            <Space direction=\"vertical\">\n                <Title level={2} style={{ textAlign: 'center', paddingBottom: '25px' }}>Statutory Declaration</Title>\n                <ErrorBoundary>\n                    {documentState.alerts ?\n                        <Alert\n                            message={documentState.alerts.message}\n                            type={documentState.alerts.type}\n                            showIcon\n                        />\n                        :\n                        <br></br>\n                    }\n                </ErrorBoundary>\n                <Text>I, <strong>{state.user.first_name} {state.user.last_name}</strong> residing at <strong>{state.user.street_no} {state.user.street}, {state.user.suburb} {state.user.state} {state.user.postcode}</strong> and having the occupation of <strong>{state.user.occupation}</strong>, make the following statutory declaration under the <strong>Oaths and Affirmations Act 2018:</strong></Text>\n                <br></br>\n                <Text type=\"secondary\">Set out matter declared to in numbered paragraphs.</Text>\n                <Form.Item\n                    label=\"1.\"\n                    name=\"content\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Enter your declaration\"\n                        }\n                    ]}><TextArea\n                        name=\"content\"\n                        placeholder=\"Enter Declaration Here\"\n                        rows={10}\n                        value={documentState.content}\n                        onChange={onChange} />\n                </Form.Item>\n                <Form.Item\n                    name=\"Add\">\n                    <Button\n                        type=\"secondary\"\n                        shape=\"round\"\n                        icon={<PlusOutlined />}>Add paragraph</Button>\n                </Form.Item>\n                <Text strong>I declare that the contents of this statutory declaration are true and correct and I make it knowing that making a statutory declaration that I know to be untrue is an offence.</Text>\n                <Form.Item\n                    label=\"Signature:\"\n                    name=\"signature\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Enter your Full Name to sign your declaration\"\n                        }\n                    ]}><Input\n                        name=\"signature\"\n                        style={{ width: 250 }}\n                        placeholder=\"Sign Here\"\n                        value={documentState.signature}\n                        onChange={onChange} />\n                </Form.Item>\n                <Input.Group compact>\n                    <Text strong>Declared at  *</Text><Paragraph strong\n                        value={documentState.location}\n                        editable={{ onChange: changeLocation }}>\n                        {documentState.location}\n                    </Paragraph><Text strong> , on {<DayJS format=\"DD MMMM YYYY, h:mm A.\">{Date.now()}</DayJS>}</Text>\n                </Input.Group>\n                <Form.Item\n                    name=\"Submit\">\n                    <Button\n                        type=\"primary\"\n                        shape=\"round\"\n                        icon={<SendOutlined />}\n                        htmlType=\"submit\" > Submit</Button>\n                </Form.Item>\n            </Space>\n        </Form>\n    )\n};\n\nexport default CreateDeclaration;","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/setAuthToken.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/userFunctions.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/GlobalState.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/blockchainAPI.js",["143"],"const Iota = require('@iota/core');\nconst Converter = require('@iota/converter');\nconst Extract = require('@iota/extract-json');\n\nconst iota = Iota.composeAPI({\n    provider: 'https://nodes.devnet.iota.org:443'\n});\n\nconst depth = 3;\nconst minimumWeightMagnitude = 9;\nconst securityLevel = 2;\n\nexport default {\n    sendToBlockchain: (address, seed, declaration) => {\n        return new Promise((function (resolve, reject) {\n            const message = JSON.stringify({ \"message\": declaration });\n            const messageInTrytes = Converter.asciiToTrytes(message);\n\n            const transfers = [\n                {\n                    value: 0,\n                    address: address,\n                    message: messageInTrytes\n                }\n            ];\n\n            iota.prepareTransfers(seed, transfers)\n                .then(trytes => {\n                    return iota.sendTrytes(trytes, depth, minimumWeightMagnitude);\n                })\n                .then(bundle => {\n                    // returns hash from the blockchain\n                    resolve(bundle[0].hash)\n                })\n                .catch(err => {\n                    reject(err)\n                });\n        }))\n    },\n\n    extractFromBlockchain: (tailTransactionHash) => {\n        return new Promise((function (resolve, reject) {\n            iota.getBundle(tailTransactionHash)\n                .then(bundle => {\n                    resolve(JSON.parse(Extract.extractJson(bundle)))\n                })\n                .catch(err => {\n                    reject(err)\n                });\n        }))\n    },\n\n    generateNewAddress: function (seed) {\n        return new Promise((function (resolve, reject) {\n            iota.getNewAddress(seed, { index: 0, securityLevel: securityLevel, total: 1 })\n                .then(address => {\n                    resolve(address)\n                })\n                .catch(err => {\n                    reject(err)\n                });\n        }))\n    }\n}","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/generateMarkdown.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/types.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Navbar/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Dashboard.js",["144"],"import { useState } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch, useHistory } from 'react-router-dom';\nimport { Row, Col, Layout, Menu } from 'antd';\nimport { UserOutlined, FileOutlined, IdcardOutlined, FileAddOutlined, MailOutlined } from '@ant-design/icons';\nimport CreateDeclaration from '../components/CreateDeclaration';\nimport UpdateDetails from '../components/UpdateDetails';\nimport DisplayDeclaration from '../components/DisplayDeclaration';\nimport Request from '../components/Request';\nimport { useAppContext } from '../store';\nimport { useLoginCheck } from '../utils/setAuthToken';\nimport API from '../utils/blockchainAPI';\n\nconst { Content, Sider, Footer } = Layout;\nconst { SubMenu } = Menu;\n\n\nfunction Dashboard() {\n    const history = useHistory();\n    const [state, appDispatch] = useAppContext();\n\n    const [documentState, setDocumentState] = useState({\n        hash: '',\n        content: ''\n    });\n\n    useLoginCheck(appDispatch);\n\n    const handleDocumentSelect = (e) => {\n        const hash = e.key;\n        API.extractFromBlockchain(hash).then((document) => {\n            const content = document.message;\n            setDocumentState({ ...documentState, hash, content })\n        })\n    }\n\n    return (\n        <Layout>\n            <Router>\n                <Sider className=\"site-layout-background\" width={250} breakpoint=\"lg\"\n                    collapsedWidth=\"0\"\n                    onBreakpoint={broken => { console.log(broken); }}\n                    onCollapse={(collapsed, type) => { console.log(collapsed, type); }}>\n                    <Menu\n                        mode=\"inline\"\n                        defaultSelectedKeys={['1']}\n                        defaultOpenKeys={['sub1']}\n                        style={{ height: '100%' }}\n                    >\n                        <SubMenu key=\"sub1\" icon={<UserOutlined />} title={state.user.first_name + ' ' + state.user.last_name}>\n                            <Menu.Item key=\"2\" icon={<IdcardOutlined />}><Link to=\"/user/update\">Update Details</Link></Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub2\" icon={<FileOutlined />} title=\"Documents\">\n                            {(state.user.documents ?\n                                state.user.documents.map(document =>\n                                    <Menu.Item key={document} onClick={handleDocumentSelect}><Link to=\"/user/document\">{document}</Link></Menu.Item>)\n                                :\n                                <Menu.Item key=\"noDocuments\">You have no documents</Menu.Item>\n                            )}\n                        </SubMenu>\n                        < Menu.Item key=\"3\" icon={<FileAddOutlined />}><Link to=\"/user/declaration\">Create New Document</Link></Menu.Item>\n                        < Menu.Item key=\"4\" icon={<MailOutlined />}><Link to=\"/user/request\">Request Document</Link></Menu.Item>\n                    </Menu>\n                </Sider >\n                <Content className=\"content\" style={{ marginTop: '50px' }}>\n                    <Row>\n                        <Col span={20} offset={2}>\n                            <Switch>\n                                <Route exact path=\"/user/update\">\n                                    <UpdateDetails />\n                                </Route>\n                                <Route exact path=\"/user/document\">\n                                    <DisplayDeclaration\n                                        hash={documentState.hash}\n                                        content={documentState.content} />\n                                </Route>\n                                <Route exact path=\"/user/declaration\">\n                                    <CreateDeclaration />\n                                </Route>\n                                <Route exact path=\"/user/request\">\n                                    <Request />\n                                </Route>\n                            </Switch>\n                        </Col>\n                    </Row>\n                </Content>\n                <Footer style={{\n                    position: \"fixed\",\n                    left: \"0\",\n                    bottom: \"0\", textAlign: 'center', fontSize: '10px', width: \"100%\",\n                }}>\n                    <h2>Witness ©2021 Created by Nina Welsh</h2>\n                </Footer>\n            </Router>\n        </Layout >\n    )\n};\n\nexport default Dashboard;","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/documentFunctions.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/DisplayDeclaration/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/geocodingAPI.js",["145"],"import axios from \"axios\";\n\nconst API_KEY = 'AIzaSyCHR4pzxUoksFuNAA1Wkp0Xs7qmdn9wlKI';\n\nexport const getLocation = (lat, long) => {\n    return new Promise((function (resolve, reject) {\n        const options = {\n            method: 'GET',\n            url: `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=${API_KEY}`,\n        };\n\n        axios.request(options)\n            .then(function (response) {\n                response.data.results.map((address) => {\n                    if (address.types[0] === \"locality\") {\n                        resolve(address.address_components[0].long_name + \", \" + address.address_components[2].long_name)\n                    }\n                })\n            }).catch(function (error) {\n                reject(error);\n            });\n    }))\n}\n\n",{"ruleId":"146","severity":1,"message":"147","line":9,"column":19,"nodeType":"148","messageId":"149","endLine":9,"endColumn":27},{"ruleId":"146","severity":1,"message":"150","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"146","severity":1,"message":"151","line":1,"column":15,"nodeType":"148","messageId":"149","endLine":1,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":16,"column":19,"nodeType":"148","messageId":"149","endLine":16,"endColumn":27},{"ruleId":"146","severity":1,"message":"152","line":5,"column":27,"nodeType":"148","messageId":"149","endLine":5,"endColumn":31},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"146","severity":1,"message":"157","line":12,"column":12,"nodeType":"148","messageId":"149","endLine":12,"endColumn":17},{"ruleId":"146","severity":1,"message":"158","line":12,"column":19,"nodeType":"148","messageId":"149","endLine":12,"endColumn":30},{"ruleId":"159","severity":1,"message":"160","line":30,"column":8,"nodeType":"161","endLine":30,"endColumn":10,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":13,"column":1,"nodeType":"165","endLine":64,"endColumn":2},{"ruleId":"146","severity":1,"message":"166","line":18,"column":11,"nodeType":"148","messageId":"149","endLine":18,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":14,"column":53,"nodeType":"169","messageId":"170","endLine":14,"endColumn":55},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Text' is assigned a value but never used.","no-native-reassign",["171"],"no-negated-in-lhs",["172"],"'state' is assigned a value but never used.","'appDispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentLocation'. Either include it or remove the dependency array.","ArrayExpression",["173"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'history' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [getCurrentLocation]",{"range":"176","text":"177"},[962,964],"[getCurrentLocation]"]