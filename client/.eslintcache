[{"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/index.js":"1","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/App.js":"2","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/Home.js":"3","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/utils/GlobalState.js":"4","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/DeclarationForm/index.js":"5","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/LoginForm/index.js":"6","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/User.js":"7","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/SignupForm/index.js":"8","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/UpdateDetailsForm/index.js":"9","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/RequestForm/index.js":"10","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/Document/index.js":"11","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/index.js":"12","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/App.js":"13","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Home.js":"14","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Login/index.js":"15","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Request/index.js":"16","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/UpdateDetails/index.js":"17","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/CreateDeclaration/index.js":"18","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/setAuthToken.js":"19","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/userFunctions.js":"20","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/index.js":"21","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/GlobalState.js":"22","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/blockchainAPI.js":"23","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/generateMarkdown.js":"24","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/types.js":"25","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Navbar/index.js":"26","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Dashboard.js":"27","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/documentFunctions.js":"28","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/DisplayDeclaration/index.js":"29","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/geocodingAPI.js":"30","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Register/index.js":"31"},{"size":147,"mtime":1611550827226,"results":"32","hashOfConfig":"33"},{"size":2100,"mtime":1611699643181,"results":"34","hashOfConfig":"33"},{"size":204,"mtime":1611546012039,"results":"35","hashOfConfig":"33"},{"size":1489,"mtime":1611697795652,"results":"36","hashOfConfig":"33"},{"size":1982,"mtime":1611703931568,"results":"37","hashOfConfig":"33"},{"size":1777,"mtime":1611699837092,"results":"38","hashOfConfig":"33"},{"size":3445,"mtime":1611700193804,"results":"39","hashOfConfig":"33"},{"size":126,"mtime":1611699608344,"results":"40","hashOfConfig":"33"},{"size":4243,"mtime":1611706421083,"results":"41","hashOfConfig":"33"},{"size":129,"mtime":1611699602201,"results":"42","hashOfConfig":"33"},{"size":124,"mtime":1611699594897,"results":"43","hashOfConfig":"33"},{"size":147,"mtime":1612150280458,"results":"44","hashOfConfig":"45"},{"size":1409,"mtime":1613428283357,"results":"46","hashOfConfig":"45"},{"size":5001,"mtime":1613082130430,"results":"47","hashOfConfig":"45"},{"size":4510,"mtime":1613428283358,"results":"48","hashOfConfig":"45"},{"size":2850,"mtime":1613030143004,"results":"49","hashOfConfig":"45"},{"size":6060,"mtime":1613030252266,"results":"50","hashOfConfig":"45"},{"size":10790,"mtime":1613426447229,"results":"51","hashOfConfig":"45"},{"size":992,"mtime":1612398542983,"results":"52","hashOfConfig":"45"},{"size":893,"mtime":1613427704250,"results":"53","hashOfConfig":"45"},{"size":616,"mtime":1612218344730,"results":"54","hashOfConfig":"45"},{"size":1007,"mtime":1612998916528,"results":"55","hashOfConfig":"45"},{"size":1970,"mtime":1613425220867,"results":"56","hashOfConfig":"45"},{"size":691,"mtime":1612911151472,"results":"57","hashOfConfig":"45"},{"size":147,"mtime":1612998926140,"results":"58","hashOfConfig":"45"},{"size":2285,"mtime":1613428502779,"results":"59","hashOfConfig":"45"},{"size":4473,"mtime":1613082555832,"results":"60","hashOfConfig":"45"},{"size":416,"mtime":1613012379388,"results":"61","hashOfConfig":"45"},{"size":1455,"mtime":1613089844915,"results":"62","hashOfConfig":"45"},{"size":805,"mtime":1613425663807,"results":"63","hashOfConfig":"45"},{"size":12210,"mtime":1613431615203,"results":"64","hashOfConfig":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zabqj2",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"xwi2oc",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/App.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/Home.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/utils/GlobalState.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/DeclarationForm/index.js",["134"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/LoginForm/index.js",["135","136"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/User.js",["137"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/SignupForm/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/UpdateDetailsForm/index.js",["138"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/RequestForm/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/Document/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/index.js",[],["139","140"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/App.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Home.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Login/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Request/index.js",["141","142"],"import { Form, Space, Input, Button, Select, Typography } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport TextArea from 'antd/lib/input/TextArea';\nimport { useAppContext } from '../../store';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\n\nfunction Request() {\n    const [state, appDispatch] = useAppContext();\n\n    return (\n        <Form\n            layout=\"horizontal\"\n        >\n            <Space direction=\"vertical\">\n                <Title level={2} style={{ paddingBottom: '25px' }}>Request a Statutory Declaration</Title>\n                <Text>Fill in the details below and an email with a link will be sent to the intended receipient.</Text>\n                <br></br>\n                <Input.Group compact>\n                    <Form.Item label=\"To:\" name=\"receipent_name\">\n                        <Input style={{ width: 250 }} placeholder=\"First Name\" />\n                        <Input style={{ width: 250 }} placeholder=\"Last Name\" />\n                    </Form.Item>\n                    <Form.Item label=\"Email:\" name=\"receipent_email\">\n                        <Input style={{ width: 500 }} placeholder=\"address@email.com.au\" />\n                    </Form.Item>\n                    <Form.Item label=\"Type:\" name=\"category\">\n                        <Select style={{ width: 500 }} defaultValue=\"Certification of Injury or Illness\">\n                            <Option value=\"Certification of Injury or Illness\">Certification of Injury or Illness</Option>\n                            <Option value=\"Certification of Injury/Illness/Death of Family Member\">Certification of Injury/Illness/Death of Family Member</Option>\n                            <Option value=\"Confirmation of Personal Details\">Confirmation of Personal Details</Option>\n                            <Option value=\"Confirmation of Financial Expenditure\">Confirmation of Financial Expenditure</Option>\n                            <Option value=\"Statement as Witness to Event\">Statement as Witness to Event</Option>\n                            <Option value=\"Statement as to Involvement in an Event\">Statement as to Involvement in an Event</Option>\n                            <Option value=\"Contractual Agreement\">Contractual Agreement</Option>\n                            <Option value=\"Other\">Other</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item label=\"Additional Information/ Requirements:\" name=\"details\">\n                        <TextArea style={{ width: 500 }} row={5} />\n                    </Form.Item>\n                </Input.Group>\n                <Form.Item name=\"Submit\">\n                    <Button type=\"primary\" shape=\"round\" icon={<SendOutlined />}>Submit</Button>\n                </Form.Item>\n            </Space>\n        </Form>\n    )\n}\n\nexport default Request;","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/UpdateDetails/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/CreateDeclaration/index.js",["143"],"import DayJS from 'react-dayjs';\nimport dayjs from 'dayjs';\nimport { Form, Input, Button, Typography, Space, Result, AutoComplete, Spin, message } from 'antd';\nimport { FilePdfFilled, PlusOutlined, SendOutlined, CloseOutlined } from '@ant-design/icons';\nimport { useState, useEffect } from 'react';\nimport { useAppContext } from '../../store';\nimport { saveDocument, saveToPDF } from '../../utils/documentFunctions';\nimport generateMarkdown from '../../utils/generateMarkdown';\nimport API from '../../utils/blockchainAPI';\nimport { getLocation } from '../../utils/geocodingAPI';\nimport { REFRESH_DETAILS } from '../../utils/types';\n\nconst { TextArea } = Input;\nconst { Title, Text, Paragraph } = Typography;\nconst { Option } = AutoComplete;\n\n\nfunction CreateDeclaration() {\n    const [state, appDispatch] = useAppContext();\n\n    const [documentState, setDocumentState] = useState({\n        title: '',\n        content: '',\n        signature: '',\n        date: dayjs().format('DD MMMM YYYY, h:mm A'),\n        location: '',\n        declaration: '',\n        alerts: '',\n        errors: '',\n        loading: false\n    });\n\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n        // something is wrong here - need to fix\n        getCurrentLocation()\n    }, []);\n\n    const getCurrentLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(showPosition);\n        } else {\n            const location = state.user.suburb + ', ' + state.user.state;\n            setDocumentState({ ...documentState, location });\n        }\n    }\n\n    const showPosition = (position) => {\n        getLocation(position.coords.latitude, position.coords.longitude)\n            .then((location) => {\n                setDocumentState({ ...documentState, location });\n            }).catch((error) => {\n                const location = state.user.suburb + ', ' + state.user.state;\n                setDocumentState({ ...documentState, location });\n            })\n    }\n\n    const onChange = (event) => {\n        setDocumentState({ ...documentState, [event.target.name]: event.target.value });\n    };\n\n    const onSelect = (value) => {\n        setDocumentState({ ...documentState, signature: value });\n    };\n\n    const changeLocation = (value) => {\n        setDocumentState({ ...documentState, location: value });\n    };\n\n    const handleFileSave = () => {\n        saveToPDF(documentState.title, documentState.declaration)\n    }\n\n    const handleFileSend = () => {\n\n    }\n\n    const handleCloseMessage = () => {\n        let alerts = '';\n        setDocumentState({ ...documentState, alerts });\n    }\n\n    const onSubmit = () => {\n        setDocumentState({ ...documentState, loading: true });\n        const details = {\n            title: documentState.title,\n            first_name: state.user.first_name,\n            last_name: state.user.last_name,\n            IOTA_address: state.user.IOTA_address[0],\n            IOTA_seed: state.user.IOTA_seed,\n            street_no: state.user.street_no,\n            street: state.user.street,\n            suburb: state.user.suburb,\n            state: state.user.state,\n            postcode: state.user.postcode,\n            occupation: state.user.occupation,\n            content: documentState.content,\n            signature: documentState.signature,\n            date: documentState.date,\n            location: documentState.location\n        };\n        const declaration = generateMarkdown(details);\n        API.sendToBlockchain(details.IOTA_address, details.IOTA_seed, declaration)\n            .then((hash) => {\n                details.hash = hash;\n                // send returned hash to database\n                saveDocument(details)\n                    .then((res) => {\n                        let alerts = { type: res.data.type, message: res.data.message, hash: details.hash };\n                        setDocumentState({ ...documentState, alerts, declaration, loading: false });\n                        form.resetFields();\n                        appDispatch({ type: REFRESH_DETAILS, payload: res.data.details });\n                        console.log('Stat dec submitted' + res);\n                    })\n                    .catch((error) => {\n                        let errors = { type: error.response.data.type, message: error.response.data.message };\n                        setDocumentState({ ...documentState, errors, loading: false });\n                    })\n            })\n    }\n\n    return (\n        <Form\n            form={form}\n            layout=\"horizontal\"\n            onFinish={onSubmit}\n        >\n            <Space direction=\"vertical\">\n                <Title level={2} style={{ textAlign: 'center', paddingBottom: '25px' }}>Statutory Declaration</Title>\n                {documentState.errors ?\n                    message[documentState.errors.type](documentState.errors.message).then(setDocumentState({ ...documentState, errors: '' }))\n                    :\n                    <div></div>\n                }\n                {documentState.alerts ?\n                    <Result\n                        status={documentState.alerts.type}\n                        title={documentState.alerts.message}\n                        subTitle={\"Hash: \" + documentState.alerts.hash}\n                    ><div style={{ textAlign: 'center' }}><Button\n                        type=\"primary\"\n                        icon={<FilePdfFilled />}\n                        style={{ marginRight: '20px' }}\n                        onClick={handleFileSave}>Save as PDF</Button>\n                            <Button\n                                type=\"primary\"\n                                icon={<SendOutlined />}\n                                style={{ marginRight: '20px' }}\n                                onClick={handleFileSend}>Send via email</Button>\n                            <Button\n                                type=\"primary\"\n                                icon={<CloseOutlined />}\n                                onClick={handleCloseMessage}>Close</Button>\n                        </div></Result>\n                    :\n                    <div>\n                        < Form.Item\n                            label=\"Title:\"\n                            name=\"title\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Enter a Title for your Statutory Declaration\"\n                                }\n                            ]}><Input\n                                style={{ width: 250 }}\n                                name=\"title\"\n                                placeholder=\"Enter a Title\"\n                                value={documentState.title}\n                                onChange={onChange} />\n                        </Form.Item>\n\n                        <Text>I, <strong>{state.user.first_name} {state.user.last_name}</strong> residing at <strong>{state.user.street_no} {state.user.street}, {state.user.suburb} {state.user.state} {state.user.postcode}</strong> and having the occupation of <strong>{state.user.occupation}</strong>, make the following statutory declaration under the <strong>Oaths and Affirmations Act 2018:</strong></Text>\n                        <br></br>\n                        <Text type=\"secondary\">Set out matter declared to in numbered paragraphs.</Text>\n                        {documentState.loading ?\n                            <Space size='middle'>\n                                <Spin size='large'></Spin>\n                            </Space>\n                            : null}\n                        <Form.Item\n                            label=\"1.\"\n                            name=\"content\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Enter your declaration\"\n                                }\n                            ]}><TextArea\n                                name=\"content\"\n                                placeholder=\"Enter Declaration Here\"\n                                rows={10}\n                                value={documentState.content}\n                                onChange={onChange} />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"Add\">\n                            <Button\n                                type=\"secondary\"\n                                shape=\"round\"\n                                icon={<PlusOutlined />}>Add paragraph</Button>\n                        </Form.Item>\n\n                        <Text strong>I declare that the contents of this statutory declaration are true and correct and I make it knowing that making a statutory declaration that I know to be untrue is an offence.</Text>\n\n                        <Form.Item\n                            label=\"Signature:\"\n                            name=\"signature\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Enter your Full Name to sign your declaration\"\n                                }\n                            ]}><AutoComplete\n                                name=\"signature\"\n                                style={{ width: 250 }}\n                                placeholder=\"Sign here\"\n                                onChange={onSelect}\n                            ><Option value={state.user.first_name + ' ' + state.user.last_name}>\n                                    {state.user.first_name + ' ' + state.user.last_name}\n                                </Option>\n                            </AutoComplete>\n                        </Form.Item>\n\n                        <Input.Group compact>\n                            <Text strong>Declared at  *</Text><Paragraph strong\n                                value={documentState.location}\n                                editable={{ onChange: changeLocation }}>\n                                {documentState.location}\n                            </Paragraph><Text strong> , on {<DayJS format=\"DD MMMM YYYY, h:mm A.\">{Date.now()}</DayJS>}</Text>\n                        </Input.Group>\n                        <Form.Item\n                            name=\"Submit\">\n                            <Button\n                                type=\"primary\"\n                                shape=\"round\"\n                                icon={<SendOutlined />}\n                                htmlType=\"submit\" > Submit</Button>\n                        </Form.Item>\n                    </div>\n                }\n            </Space>\n        </Form >\n\n    )\n};\n\nexport default CreateDeclaration;","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/setAuthToken.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/userFunctions.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/GlobalState.js",["144"],"import { isEmpty } from 'lodash';\nimport { SET_CURRENT_USER, USER_LOADING, REFRESH_DETAILS } from '../utils/types';\nimport jwt_decode from 'jwt-decode';\n\nconst getToken = () => {\n    const token = localStorage.getItem('userToken');\n    if (token) {\n        const decodedToken = jwt_decode(token);\n        return decodedToken;\n    }\n    return {};\n}\n\nexport const appInitialState = {\n    isAuthenticated: false,\n    user: getToken(),\n    loading: false,\n    errors: {}\n};\n\nexport function appReducer(state = appInitialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload,\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n        case REFRESH_DETAILS:\n            return {\n                ...state,\n                user: action.payload,\n            }\n    }\n}","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/blockchainAPI.js",["145"],"const Iota = require('@iota/core');\nconst Converter = require('@iota/converter');\nconst Extract = require('@iota/extract-json');\n\nconst iota = Iota.composeAPI({\n    provider: 'https://nodes.devnet.iota.org:443'\n});\n\nconst depth = 3;\nconst minimumWeightMagnitude = 9;\nconst securityLevel = 2;\n\nexport default {\n    sendToBlockchain: (address, seed, declaration) => {\n        return new Promise((function (resolve, reject) {\n            const message = JSON.stringify({ \"message\": declaration });\n            const messageInTrytes = Converter.asciiToTrytes(message);\n\n            const transfers = [\n                {\n                    value: 0,\n                    address: address,\n                    message: messageInTrytes\n                }\n            ];\n\n            iota.prepareTransfers(seed, transfers)\n                .then(trytes => {\n                    return iota.sendTrytes(trytes, depth, minimumWeightMagnitude);\n                })\n                .then(bundle => {\n                    // returns hash from the blockchain\n                    resolve(bundle[0].hash)\n                })\n                .catch(err => {\n                    reject(err)\n                });\n        }))\n    },\n\n    extractFromBlockchain: (tailTransactionHash) => {\n        return new Promise((function (resolve, reject) {\n            iota.getBundle(tailTransactionHash)\n                .then(bundle => {\n                    resolve(JSON.parse(Extract.extractJson(bundle)))\n                })\n                .catch(err => {\n                    reject(err)\n                });\n        }))\n    },\n\n    generateNewAddress: (seed) => {\n        return new Promise((function (resolve, reject) {\n            iota.getNewAddress(seed, { index: 0, securityLevel: securityLevel, total: 1 })\n                .then(address => {\n                    resolve(address)\n                })\n                .catch(err => {\n                    reject(err)\n                });\n        }))\n    }\n}","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/generateMarkdown.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/types.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Navbar/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Dashboard.js",["146"],"import { useState } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch, useHistory } from 'react-router-dom';\nimport { Row, Col, Layout, Menu } from 'antd';\nimport { UserOutlined, FileOutlined, IdcardOutlined, FileAddOutlined, MailOutlined } from '@ant-design/icons';\nimport CreateDeclaration from '../components/CreateDeclaration';\nimport UpdateDetails from '../components/UpdateDetails';\nimport DisplayDeclaration from '../components/DisplayDeclaration';\nimport Request from '../components/Request';\nimport { useAppContext } from '../store';\nimport { useLoginCheck } from '../utils/setAuthToken';\nimport API from '../utils/blockchainAPI';\nimport './style.css'\n\nconst { Content, Sider } = Layout;\nconst { SubMenu } = Menu;\n\n\nfunction Dashboard() {\n    const history = useHistory();\n    const [state, appDispatch] = useAppContext();\n\n    const [documentState, setDocumentState] = useState({\n        hash: '',\n        content: '',\n        title: ''\n    });\n\n    useLoginCheck(appDispatch);\n\n    const handleDocumentSelect = (e) => {\n        const hash = e.key;\n        const title = e.item.props.name;\n        API.extractFromBlockchain(hash).then((document) => {\n            const content = document.message;\n            setDocumentState({ ...documentState, hash, content, title })\n        })\n    }\n\n    return (\n        <Layout >\n            <Router>\n                <Sider className=\"site-layout-background\" width={250} breakpoint=\"lg\"\n                    collapsedWidth=\"0\"\n                    onBreakpoint={broken => { console.log(broken); }}\n                    onCollapse={(collapsed, type) => { console.log(collapsed, type); }}>\n                    <Menu\n                        mode=\"inline\"\n                        defaultSelectedKeys={['1']}\n                        defaultOpenKeys={['sub1']}\n                        style={{ height: '100%' }}\n                    >\n                        <SubMenu key=\"sub1\" icon={<UserOutlined />} title={state.user.first_name + ' ' + state.user.last_name}>\n                            <Menu.Item key=\"2\" icon={<IdcardOutlined />}><Link to=\"/user/update\">Update Details</Link></Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub2\" icon={<FileOutlined />} title=\"Documents\">\n                            {(state.user.documents ?\n                                state.user.documents.map(document =>\n                                    <Menu.Item\n                                        name={document.title}\n                                        key={document.hash}\n                                        onClick={handleDocumentSelect}\n                                    ><Link to=\"/user/document\">{document.title}</Link></Menu.Item>)\n                                :\n                                <Menu.Item key=\"noDocuments\">You have no documents</Menu.Item>\n                            )}\n                        </SubMenu>\n                        < Menu.Item key=\"3\" icon={<FileAddOutlined />}><Link to=\"/user/declaration\">Create New Document</Link></Menu.Item>\n                        < Menu.Item key=\"4\" icon={<MailOutlined />}><Link to=\"/user/request\">Request Document</Link></Menu.Item>\n                    </Menu>\n                </Sider >\n                <Content className=\"content\" >\n                    <Row>\n                        <Col span={20} offset={2}>\n                            <Switch>\n                                <Route exact path=\"/user/update\">\n                                    <UpdateDetails />\n                                </Route>\n                                <Route exact path=\"/user/document\">\n                                    <DisplayDeclaration\n                                        hash={documentState.hash}\n                                        title={documentState.title}\n                                        content={documentState.content} />\n                                </Route>\n                                <Route exact path=\"/user/declaration\">\n                                    <CreateDeclaration />\n                                </Route>\n                                <Route exact path=\"/user/request\">\n                                    <Request />\n                                </Route>\n                            </Switch>\n                        </Col>\n                    </Row>\n                </Content>\n            </Router>\n        </Layout >\n    )\n};\n\nexport default Dashboard;","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/documentFunctions.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/DisplayDeclaration/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/geocodingAPI.js",["147"],"import axios from \"axios\";\n\nconst API_KEY = 'AIzaSyCHR4pzxUoksFuNAA1Wkp0Xs7qmdn9wlKI';\n\nexport const getLocation = (lat, long) => {\n    return new Promise((function (resolve, reject) {\n        const options = {\n            method: 'GET',\n            url: `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=${API_KEY}`,\n        };\n\n        axios.request(options)\n            .then(function (response) {\n                response.data.results.map((address) => {\n                    if (address.types[0] === \"locality\") {\n                        resolve(address.address_components[0].long_name + \", \" + address.address_components[2].long_name)\n                    }\n                })\n            }).catch(function (error) {\n                reject(error);\n            });\n    }))\n}\n\n","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Register/index.js",["148"],{"ruleId":"149","severity":1,"message":"150","line":9,"column":19,"nodeType":"151","messageId":"152","endLine":9,"endColumn":27},{"ruleId":"149","severity":1,"message":"153","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":13},{"ruleId":"149","severity":1,"message":"154","line":1,"column":15,"nodeType":"151","messageId":"152","endLine":1,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":16,"column":19,"nodeType":"151","messageId":"152","endLine":16,"endColumn":27},{"ruleId":"149","severity":1,"message":"155","line":5,"column":27,"nodeType":"151","messageId":"152","endLine":5,"endColumn":31},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"149","severity":1,"message":"160","line":11,"column":12,"nodeType":"151","messageId":"152","endLine":11,"endColumn":17},{"ruleId":"149","severity":1,"message":"161","line":11,"column":19,"nodeType":"151","messageId":"152","endLine":11,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":38,"column":8,"nodeType":"164","endLine":38,"endColumn":10,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":22,"column":5,"nodeType":"168","messageId":"169","endLine":39,"endColumn":6},{"ruleId":"170","severity":1,"message":"171","line":13,"column":1,"nodeType":"172","endLine":64,"endColumn":2},{"ruleId":"149","severity":1,"message":"173","line":19,"column":11,"nodeType":"151","messageId":"152","endLine":19,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":14,"column":53,"nodeType":"176","messageId":"177","endLine":14,"endColumn":55},{"ruleId":"162","severity":1,"message":"178","line":51,"column":8,"nodeType":"164","endLine":51,"endColumn":39,"suggestions":"179"},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Text' is assigned a value but never used.","no-native-reassign",["180"],"no-negated-in-lhs",["181"],"'state' is assigned a value but never used.","'appDispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentLocation'. Either include it or remove the dependency array.","ArrayExpression",["182"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'history' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'registerState'. Either include it or remove the dependency array. You can also do a functional update 'setRegisterState(r => ...)' if you only need 'registerState' in the 'setRegisterState' call.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [getCurrentLocation]",{"range":"188","text":"189"},"Update the dependencies array to be: [googlevalue.value.description, registerState]",{"range":"190","text":"191"},[1261,1263],"[getCurrentLocation]",[1374,1405],"[googlevalue.value.description, registerState]"]