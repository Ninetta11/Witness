[{"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/index.js":"1","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/App.js":"2","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/Home.js":"3","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/utils/GlobalState.js":"4","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/DeclarationForm/index.js":"5","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/LoginForm/index.js":"6","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/User.js":"7","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/SignupForm/index.js":"8","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/UpdateDetailsForm/index.js":"9","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/RequestForm/index.js":"10","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/Document/index.js":"11","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/index.js":"12","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/App.js":"13","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Home.js":"14","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Login/index.js":"15","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Request/index.js":"16","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/CreateDeclaration/index.js":"17","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/setAuthToken.js":"18","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/userFunctions.js":"19","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/index.js":"20","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/GlobalState.js":"21","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/blockchainAPI.js":"22","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/generateMarkdown.js":"23","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/types.js":"24","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Navbar/index.js":"25","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Dashboard.js":"26","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/documentFunctions.js":"27","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/DisplayDeclaration/index.js":"28","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/geocodingAPI.js":"29","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Register/index.js":"30","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterSteps/index.js":"31","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/Address.js":"32","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/Occupation.js":"33","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/Email.js":"34","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/Password.js":"35","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/FirstName.js":"36","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/LastName.js":"37","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/UserDetails/index.js":"38"},{"size":147,"mtime":1611550827226,"results":"39","hashOfConfig":"40"},{"size":2100,"mtime":1611699643181,"results":"41","hashOfConfig":"40"},{"size":204,"mtime":1611546012039,"results":"42","hashOfConfig":"40"},{"size":1489,"mtime":1611697795652,"results":"43","hashOfConfig":"40"},{"size":1982,"mtime":1611703931568,"results":"44","hashOfConfig":"40"},{"size":1777,"mtime":1611699837092,"results":"45","hashOfConfig":"40"},{"size":3445,"mtime":1611700193804,"results":"46","hashOfConfig":"40"},{"size":126,"mtime":1611699608344,"results":"47","hashOfConfig":"40"},{"size":4243,"mtime":1611706421083,"results":"48","hashOfConfig":"40"},{"size":129,"mtime":1611699602201,"results":"49","hashOfConfig":"40"},{"size":124,"mtime":1611699594897,"results":"50","hashOfConfig":"40"},{"size":147,"mtime":1612150280458,"results":"51","hashOfConfig":"52"},{"size":1295,"mtime":1613704882450,"results":"53","hashOfConfig":"52"},{"size":5005,"mtime":1613701341127,"results":"54","hashOfConfig":"52"},{"size":3369,"mtime":1613702060920,"results":"55","hashOfConfig":"52"},{"size":2850,"mtime":1613030143004,"results":"56","hashOfConfig":"52"},{"size":10781,"mtime":1613789793168,"results":"57","hashOfConfig":"52"},{"size":992,"mtime":1612398542983,"results":"58","hashOfConfig":"52"},{"size":1264,"mtime":1613697961429,"results":"59","hashOfConfig":"52"},{"size":616,"mtime":1612218344730,"results":"60","hashOfConfig":"52"},{"size":1007,"mtime":1612998916528,"results":"61","hashOfConfig":"52"},{"size":1970,"mtime":1613425220867,"results":"62","hashOfConfig":"52"},{"size":691,"mtime":1612911151472,"results":"63","hashOfConfig":"52"},{"size":147,"mtime":1612998926140,"results":"64","hashOfConfig":"52"},{"size":3138,"mtime":1613707091037,"results":"65","hashOfConfig":"52"},{"size":5078,"mtime":1613789299843,"results":"66","hashOfConfig":"52"},{"size":416,"mtime":1613012379388,"results":"67","hashOfConfig":"52"},{"size":1455,"mtime":1613089844915,"results":"68","hashOfConfig":"52"},{"size":805,"mtime":1613425663807,"results":"69","hashOfConfig":"52"},{"size":8436,"mtime":1613778357539,"results":"70","hashOfConfig":"52"},{"size":1531,"mtime":1613779843605,"results":"71","hashOfConfig":"52"},{"size":972,"mtime":1613779835750,"results":"72","hashOfConfig":"52"},{"size":655,"mtime":1613690440959,"results":"73","hashOfConfig":"52"},{"size":605,"mtime":1613510419118,"results":"74","hashOfConfig":"52"},{"size":1626,"mtime":1613510435679,"results":"75","hashOfConfig":"52"},{"size":649,"mtime":1613691474212,"results":"76","hashOfConfig":"52"},{"size":641,"mtime":1613691135036,"results":"77","hashOfConfig":"52"},{"size":6607,"mtime":1613788180902,"results":"78","hashOfConfig":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zabqj2",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"xwi2oc",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"103"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"103"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"103"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"103"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"103"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"103"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/App.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/Home.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/utils/GlobalState.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/DeclarationForm/index.js",["162"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/LoginForm/index.js",["163","164"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/views/User.js",["165"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/SignupForm/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/UpdateDetailsForm/index.js",["166"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/RequestForm/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Test/witnes/src/components/Document/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/index.js",[],["167","168"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/App.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Home.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Login/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Request/index.js",["169","170"],"import { Form, Space, Input, Button, Select, Typography } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport TextArea from 'antd/lib/input/TextArea';\nimport { useAppContext } from '../../store';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\n\nfunction Request() {\n    const [state, appDispatch] = useAppContext();\n\n    return (\n        <Form\n            layout=\"horizontal\"\n        >\n            <Space direction=\"vertical\">\n                <Title level={2} style={{ paddingBottom: '25px' }}>Request a Statutory Declaration</Title>\n                <Text>Fill in the details below and an email with a link will be sent to the intended receipient.</Text>\n                <br></br>\n                <Input.Group compact>\n                    <Form.Item label=\"To:\" name=\"receipent_name\">\n                        <Input style={{ width: 250 }} placeholder=\"First Name\" />\n                        <Input style={{ width: 250 }} placeholder=\"Last Name\" />\n                    </Form.Item>\n                    <Form.Item label=\"Email:\" name=\"receipent_email\">\n                        <Input style={{ width: 500 }} placeholder=\"address@email.com.au\" />\n                    </Form.Item>\n                    <Form.Item label=\"Type:\" name=\"category\">\n                        <Select style={{ width: 500 }} defaultValue=\"Certification of Injury or Illness\">\n                            <Option value=\"Certification of Injury or Illness\">Certification of Injury or Illness</Option>\n                            <Option value=\"Certification of Injury/Illness/Death of Family Member\">Certification of Injury/Illness/Death of Family Member</Option>\n                            <Option value=\"Confirmation of Personal Details\">Confirmation of Personal Details</Option>\n                            <Option value=\"Confirmation of Financial Expenditure\">Confirmation of Financial Expenditure</Option>\n                            <Option value=\"Statement as Witness to Event\">Statement as Witness to Event</Option>\n                            <Option value=\"Statement as to Involvement in an Event\">Statement as to Involvement in an Event</Option>\n                            <Option value=\"Contractual Agreement\">Contractual Agreement</Option>\n                            <Option value=\"Other\">Other</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item label=\"Additional Information/ Requirements:\" name=\"details\">\n                        <TextArea style={{ width: 500 }} row={5} />\n                    </Form.Item>\n                </Input.Group>\n                <Form.Item name=\"Submit\">\n                    <Button type=\"primary\" shape=\"round\" icon={<SendOutlined />}>Submit</Button>\n                </Form.Item>\n            </Space>\n        </Form>\n    )\n}\n\nexport default Request;","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/CreateDeclaration/index.js",["171"],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/setAuthToken.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/userFunctions.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/store/GlobalState.js",["172"],"import { isEmpty } from 'lodash';\nimport { SET_CURRENT_USER, USER_LOADING, REFRESH_DETAILS } from '../utils/types';\nimport jwt_decode from 'jwt-decode';\n\nconst getToken = () => {\n    const token = localStorage.getItem('userToken');\n    if (token) {\n        const decodedToken = jwt_decode(token);\n        return decodedToken;\n    }\n    return {};\n}\n\nexport const appInitialState = {\n    isAuthenticated: false,\n    user: getToken(),\n    loading: false,\n    errors: {}\n};\n\nexport function appReducer(state = appInitialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload,\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n        case REFRESH_DETAILS:\n            return {\n                ...state,\n                user: action.payload,\n            }\n    }\n}","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/blockchainAPI.js",["173"],"const Iota = require('@iota/core');\nconst Converter = require('@iota/converter');\nconst Extract = require('@iota/extract-json');\n\nconst iota = Iota.composeAPI({\n    provider: 'https://nodes.devnet.iota.org:443'\n});\n\nconst depth = 3;\nconst minimumWeightMagnitude = 9;\nconst securityLevel = 2;\n\nexport default {\n    sendToBlockchain: (address, seed, declaration) => {\n        return new Promise((function (resolve, reject) {\n            const message = JSON.stringify({ \"message\": declaration });\n            const messageInTrytes = Converter.asciiToTrytes(message);\n\n            const transfers = [\n                {\n                    value: 0,\n                    address: address,\n                    message: messageInTrytes\n                }\n            ];\n\n            iota.prepareTransfers(seed, transfers)\n                .then(trytes => {\n                    return iota.sendTrytes(trytes, depth, minimumWeightMagnitude);\n                })\n                .then(bundle => {\n                    // returns hash from the blockchain\n                    resolve(bundle[0].hash)\n                })\n                .catch(err => {\n                    reject(err)\n                });\n        }))\n    },\n\n    extractFromBlockchain: (tailTransactionHash) => {\n        return new Promise((function (resolve, reject) {\n            iota.getBundle(tailTransactionHash)\n                .then(bundle => {\n                    resolve(JSON.parse(Extract.extractJson(bundle)))\n                })\n                .catch(err => {\n                    reject(err)\n                });\n        }))\n    },\n\n    generateNewAddress: (seed) => {\n        return new Promise((function (resolve, reject) {\n            iota.getNewAddress(seed, { index: 0, securityLevel: securityLevel, total: 1 })\n                .then(address => {\n                    resolve(address)\n                })\n                .catch(err => {\n                    reject(err)\n                });\n        }))\n    }\n}","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/generateMarkdown.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/types.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Navbar/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/views/Dashboard.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/documentFunctions.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/DisplayDeclaration/index.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/utils/geocodingAPI.js",["174"],"import axios from \"axios\";\n\nconst API_KEY = 'AIzaSyCHR4pzxUoksFuNAA1Wkp0Xs7qmdn9wlKI';\n\nexport const getLocation = (lat, long) => {\n    return new Promise((function (resolve, reject) {\n        const options = {\n            method: 'GET',\n            url: `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=${API_KEY}`,\n        };\n\n        axios.request(options)\n            .then(function (response) {\n                response.data.results.map((address) => {\n                    if (address.types[0] === \"locality\") {\n                        resolve(address.address_components[0].long_name + \", \" + address.address_components[2].long_name)\n                    }\n                })\n            }).catch(function (error) {\n                reject(error);\n            });\n    }))\n}\n\n","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/Register/index.js",["175"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport './style.css';\nimport { Layout, Row, Col, Form, Button, Typography, Steps, message } from 'antd';\nimport { RightCircleOutlined, UserAddOutlined } from '@ant-design/icons';\nimport RegisterSteps from '../RegisterSteps';\nimport { registerUser, loginUser, getUsers, generateSeed } from '../../utils/userFunctions';\nimport API from '../../utils/blockchainAPI';\nimport { SET_CURRENT_USER } from '../../utils/types';\nimport { useAppContext } from '../../store';\nimport { setAuthToken } from '../../utils/setAuthToken';\nimport steps from '../../data/steps.json';\n\nconst { Content } = Layout;\nconst { Step } = Steps;\nconst { Title } = Typography;\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\n\nfunction Register() {\n    const history = useHistory();\n\n    const [, appDispatch] = useAppContext();\n\n    const [googlevalue, setValue] = useState({ value: { description: \"\" } });\n\n    const [registerState, setRegisterState] = useState({\n        first_name: '',\n        last_name: '',\n        address: googlevalue,\n        occupation: '',\n        email: '',\n        password: '',\n        IOTA_seed: '',\n        IOTA_address: '',\n        alerts: '',\n        formIsValid: true,\n    });\n\n    const [current, setCurrent] = React.useState(0);\n\n    useEffect(() => {\n        setRegisterState({\n            ...registerState,\n            address: googlevalue.value.description,\n        });\n    }, [googlevalue.value.description]);\n\n    // updates global state when data is entered into any of the inputs\n    const onChange = (event) => {\n        setRegisterState({ ...registerState, [event.target.name]: event.target.value });\n    };\n\n    // on form submit\n    const handleSubmit = () => {\n        let alerts = '';\n        const userData = {\n            first_name: registerState.first_name,\n            last_name: registerState.last_name,\n            address: registerState.address,\n            occupation: registerState.occupation,\n            email: registerState.email,\n            password: registerState.password\n        };\n        // current registered user information is pulled from the database\n        getUsers().then((data) => {\n            // compares all current registered user emails against inputted email\n            var alreadyRegisteredUser = data\n                .find((element) => element.email === registerState.email)\n            // if email does not exist in the database\n            if (!alreadyRegisteredUser) {\n                // generate random seed for new user \n                let seed = generateSeed();\n                // generate an IOTA blockchain address from seed\n                API.generateNewAddress(seed)\n                    .then((address) => {\n                        userData.IOTA_seed = seed;\n                        userData.IOTA_address = address;\n                        // registers user and redirects to login page\n                        registerUser(userData)\n                            .then((res) => {\n                                alerts = { type: res.data.type, message: res.data.message };\n                                setRegisterState({ ...registerState, alerts });\n                                const user = {\n                                    email: registerState.email,\n                                    password: registerState.password,\n                                };\n                                loginUser(user).then((response) => {\n                                    // Set token to localStorage\n                                    const token = response.data;\n                                    // Set token to Auth header\n                                    setAuthToken(token);\n                                    // Decode token to get user data\n                                    const decodedToken = jwt_decode(token);\n                                    // Set current user\n                                    appDispatch({ type: SET_CURRENT_USER, payload: decodedToken });\n                                    history.push('/user');\n                                }).catch((error) => {\n                                    let alerts = { type: error.response.data.type, message: error.response.data.message };\n                                    setRegisterState({ ...registerState, alerts });\n                                })\n                            })\n                            .catch((error) => {\n                                console.log(error);\n                                alerts = { type: error.response.data.type, message: error.response.data.message };\n                                setRegisterState({ ...registerState, alerts });\n                            })\n                    })\n            }\n            else {\n                // If user already exists, alerts user\n                alerts = { type: 'error', message: 'User already existed. Please login' };\n                setRegisterState({ ...registerState, alerts });\n            }\n        }).catch((error) => {\n            console.log(error);\n            alerts = { type: error.response.data.type, message: error.response.data.message };\n            setRegisterState({ ...registerState, alerts });\n        })\n    };\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const handleProgress = (currentStep) => {\n        if (registerState[currentStep]) {\n            next()\n        }\n        else {\n            let alerts = { type: 'error', message: 'Please complete all form fields' };\n            setRegisterState({ ...registerState, alerts });\n        }\n    }\n\n    return (\n        <Content className=\"content\" >\n            {registerState.alerts ?\n                message[registerState.alerts.type](registerState.alerts.message).then(setRegisterState({ ...registerState, alerts: '' }))\n                :\n                null\n            }\n            <Row>\n                <Col span={18} offset={3}>\n                    <Form\n                        noValidate\n                        {...layout}\n                        onFinish={handleSubmit}\n                    >\n                        <div style={{ textAlign: 'center', fontSize: '30px' }} >\n                            <UserAddOutlined />\n                            <Title level={2} style={{ paddingBottom: '25px' }} >Register</Title>\n                        </div>\n\n                        <Steps current={current}>\n                            {steps.map(item => (\n                                <Step key={item.title} title={item.title} />\n                            ))}\n                        </Steps>\n\n                        <div className=\"steps-content\">\n                            <RegisterSteps\n                                step={steps[current].title}\n                                googlevalue={googlevalue}\n                                setValue={setValue}\n                                registerState={registerState}\n                                setRegisterState={setRegisterState}\n                                onChange={onChange} />\n                        </div>\n\n                        <div className=\"steps-action\" {...tailLayout}>\n                            {current > 0 && (\n                                <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n                                    Previous\n                                </Button>\n                            )}\n                            {current === steps.length - 1 && (\n                                <Button type=\"primary\" icon={<RightCircleOutlined />} htmlType=\"submit\" >\n                                    Complete\n                                </Button>\n                            )}\n                            {current < steps.length - 1 && (\n                                <Button type=\"primary\" onClick={() => handleProgress(steps[current].name)}>\n                                    Next\n                                </Button>\n                            )}\n                        </div>\n\n                    </Form>\n                </Col>\n            </Row>\n        </Content >\n    );\n};\n\nexport default Register;","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterSteps/index.js",["176"],"import FirstName from '../RegisterItems/FirstName';\nimport LastName from '../RegisterItems/LastName';\nimport Address from '../RegisterItems/Address';\nimport Occupation from '../RegisterItems/Occupation';\nimport Email from '../RegisterItems/Email';\nimport Password from '../RegisterItems/Password';\n\n\nfunction RegisterSteps({\n    step,\n    googlevalue,\n    setValue,\n    registerState,\n    onChange\n}) {\n    switch (step) {\n        case \"First Name\":\n            return (\n                <FirstName\n                    registerState={registerState}\n                    onChange={onChange} />\n            )\n        case \"Last Name\":\n            return (\n                <LastName\n                    registerState={registerState}\n                    onChange={onChange} />\n            )\n        case \"Address\":\n            return (\n                <Address\n                    googlevalue={googlevalue}\n                    setValue={setValue} />\n            )\n        case \"Occupation\":\n            return (\n                <Occupation\n                    registerState={registerState}\n                    onChange={onChange} />\n            )\n        case \"Email\":\n            return (\n                <Email\n                    registerState={registerState}\n                    onChange={onChange} />\n            )\n        case \"Password\":\n            return (\n                <Password\n                    registerState={registerState}\n                    onChange={onChange} />\n            )\n    }\n}\n\nexport default RegisterSteps;","/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/Address.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/Occupation.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/Email.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/Password.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/FirstName.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/RegisterItems/LastName.js",[],"/Users/ninawelsh/Desktop/Coding Bootcamp/Assignments/Witness/client/src/components/UserDetails/index.js",["177","178"],{"ruleId":"179","severity":1,"message":"180","line":9,"column":19,"nodeType":"181","messageId":"182","endLine":9,"endColumn":27},{"ruleId":"179","severity":1,"message":"183","line":1,"column":10,"nodeType":"181","messageId":"182","endLine":1,"endColumn":13},{"ruleId":"179","severity":1,"message":"184","line":1,"column":15,"nodeType":"181","messageId":"182","endLine":1,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":16,"column":19,"nodeType":"181","messageId":"182","endLine":16,"endColumn":27},{"ruleId":"179","severity":1,"message":"185","line":5,"column":27,"nodeType":"181","messageId":"182","endLine":5,"endColumn":31},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"179","severity":1,"message":"190","line":11,"column":12,"nodeType":"181","messageId":"182","endLine":11,"endColumn":17},{"ruleId":"179","severity":1,"message":"191","line":11,"column":19,"nodeType":"181","messageId":"182","endLine":11,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":38,"column":8,"nodeType":"194","endLine":38,"endColumn":10,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":22,"column":5,"nodeType":"198","messageId":"199","endLine":39,"endColumn":6},{"ruleId":"200","severity":1,"message":"201","line":13,"column":1,"nodeType":"202","endLine":64,"endColumn":2},{"ruleId":"203","severity":1,"message":"204","line":14,"column":53,"nodeType":"205","messageId":"206","endLine":14,"endColumn":55},{"ruleId":"192","severity":1,"message":"207","line":61,"column":8,"nodeType":"194","endLine":61,"endColumn":39,"suggestions":"208"},{"ruleId":"196","severity":1,"message":"197","line":16,"column":5,"nodeType":"198","messageId":"199","endLine":53,"endColumn":6},{"ruleId":"209","severity":1,"message":"210","line":141,"column":77,"nodeType":"211","endLine":141,"endColumn":81},{"ruleId":"209","severity":1,"message":"210","line":163,"column":68,"nodeType":"211","endLine":163,"endColumn":72},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Text' is assigned a value but never used.","no-native-reassign",["212"],"no-negated-in-lhs",["213"],"'state' is assigned a value but never used.","'appDispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentLocation'. Either include it or remove the dependency array.","ArrayExpression",["214"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'registerState'. Either include it or remove the dependency array. You can also do a functional update 'setRegisterState(r => ...)' if you only need 'registerState' in the 'setRegisterState' call.",["215"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [getCurrentLocation]",{"range":"220","text":"221"},"Update the dependencies array to be: [googlevalue.value.description, registerState]",{"range":"222","text":"223"},[1261,1263],"[getCurrentLocation]",[1662,1693],"[googlevalue.value.description, registerState]"]